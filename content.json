{"meta":{"title":"洛书","subtitle":null,"description":"洛书的博客","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"tags","date":"2019-11-04T12:39:08.000Z","updated":"2019-11-04T12:39:40.565Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"宏的学习","slug":"宏的学习","date":"2019-11-01T03:30:35.000Z","updated":"2019-11-01T09:32:15.576Z","comments":true,"path":"2019/11/01/宏的学习/","link":"","permalink":"http://yoursite.com/2019/11/01/%E5%AE%8F%E7%9A%84%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"关于宏定义 宏定义属于预处理指令，#define指令定义一个宏，#undef指令删除一个宏。 定义的一般形式 #define 标识符 字符串 #表示这是一条预处理命令(在C语言中凡是以#开头的均为预处理命令) ==define==为宏定义命令 ==标识符==为所定义的宏名, ==字符串==可以是常数、表达式、格式串等、符号常量 宏的用法 #define函数 #define DEBUG(x) ((x)+(x))如上所示，用于对数值表达式进行求值的宏定义都应该用这种方式加上括号，避免在使用宏时由于参数中的操作等或邻近操作符之间不可预料的相互作用。 #define替换 在调用宏时，首先对参数进行检查，看看是否包含任何由#define定义的符号，如果是，它们首先被替换。 替换文本随后被插入到程序中原来文本的位置。对于宏，参数名被它们的值替换。 替换文本指的是#define DEBUG(x) ((x)+(x))中的 ((x)+(x)) 最后，再次对结果文件进行扫描，看看它是否包含任何由#define定义的符号，如果是，就重复上述的处理过程。 宏参数和#define定义可以包含其他#define定义的符号，但是，宏不可以出现递归，也就是不可以自己调用自己。 若想要在宏里面写一个大面积的代码，最好用do{…}while(0)把代码括起来，这样写会带来很多方便，比如最后人们写代码习惯加分号，还有可以使在运行时不会出现逻辑上的错误。 宏体换行需要在行末加反斜杠\\ 宏定义最好使用大写字母 宏参数中若包含另外的宏，那么宏参数在被代入到宏体之前会做一次完全的展开，除非宏体中含有#或##。 #的用法 给一个宏的参数前面加上一个#，会把参数转换成参数代表的字面值。 ##的用法 ##结构则执行一种不同的任务，他可以把它两边的宏符号连接成一个宏符号。作为作用之一，它允许宏定义从分离的文本段创建表示符。","categories":[],"tags":[{"name":"二轮","slug":"二轮","permalink":"http://yoursite.com/tags/%E4%BA%8C%E8%BD%AE/"},{"name":"提升","slug":"提升","permalink":"http://yoursite.com/tags/%E6%8F%90%E5%8D%87/"}]},{"title":"提升题","slug":"提升题","date":"2019-10-28T11:33:57.000Z","updated":"2019-11-01T04:31:07.858Z","comments":true,"path":"2019/10/28/提升题/","link":"","permalink":"http://yoursite.com/2019/10/28/%E6%8F%90%E5%8D%87%E9%A2%98/","excerpt":"","text":"宏的编写 #define EVALUATION(x, y) ((x / y) * y) #define EVALUATION(x, y) ((x / y + 1) * y) #define EVALUATION(x, y) \\ n = ((x / y) * y); \\ while (n &amp; (n - 1) == 0) \\ { \\ n = n + y; \\ } #define EVALUATION(x, y) \\ n = ((x / y + 1) * y); \\ while (n &amp; (n - 1) == 0) \\ { \\ n = n - y; \\ }","categories":[],"tags":[{"name":"二轮","slug":"二轮","permalink":"http://yoursite.com/tags/%E4%BA%8C%E8%BD%AE/"},{"name":"提升","slug":"提升","permalink":"http://yoursite.com/tags/%E6%8F%90%E5%8D%87/"}]},{"title":"关于科学上网","slug":"关于科学上网","date":"2019-10-24T01:22:52.000Z","updated":"2019-11-01T04:31:15.831Z","comments":true,"path":"2019/10/24/关于科学上网/","link":"","permalink":"http://yoursite.com/2019/10/24/%E5%85%B3%E4%BA%8E%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/","excerpt":"","text":"没想到基础题中科学上网也这么费闹筋。 想试试以前windows翻墙的方法，找了半天没找着一个适用于linux的加速器。 按照网上的方法下载shadowsocks设置VPN，结果是把自己的电脑变成服务器？！ 在两天寻找方法无果后最后在火狐浏览器上装了foxyproxy插件添加了一个网上找的免费代理，其他方法着实不想弄了，时间紧迫。","categories":[],"tags":[{"name":"二轮","slug":"二轮","permalink":"http://yoursite.com/tags/%E4%BA%8C%E8%BD%AE/"},{"name":"基础","slug":"基础","permalink":"http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"}]},{"title":"Linux及Git常用命令的学习","slug":"Linux及Git常用命令的学习","date":"2019-10-19T03:34:15.000Z","updated":"2019-11-01T04:31:19.643Z","comments":true,"path":"2019/10/19/Linux及Git常用命令的学习/","link":"","permalink":"http://yoursite.com/2019/10/19/Linux%E5%8F%8AGit%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%9A%84%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"Linux命令 现已基本掌握开关机等基本命令。 目录文件增删改查等操作命令。 压缩文件操作命令。 一些基本的查找命令。 一些类型文件的安装与卸载命令 pwd，kill等其他命令 一些vim常用命令 Git常用命令 由于github还不能熟练使用，再加上招新基础题中并未经常用到GIT命令，现在只了解基本的初始化、克隆、提交等基础命令（其他命令死记硬背没用过时间久了也记不住） 学业繁忙，提升题还没开始做，命令的学习还是只能靠循序渐进了","categories":[],"tags":[{"name":"二轮","slug":"二轮","permalink":"http://yoursite.com/tags/%E4%BA%8C%E8%BD%AE/"},{"name":"基础","slug":"基础","permalink":"http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"}]},{"title":"二轮-gcc的安装(python)","slug":"gcc、python的安装","date":"2019-10-19T03:34:04.000Z","updated":"2019-11-01T04:31:23.431Z","comments":true,"path":"2019/10/19/gcc、python的安装/","link":"","permalink":"http://yoursite.com/2019/10/19/gcc%E3%80%81python%E7%9A%84%E5%AE%89%E8%A3%85/","excerpt":"","text":"","categories":[],"tags":[{"name":"二轮","slug":"二轮","permalink":"http://yoursite.com/tags/%E4%BA%8C%E8%BD%AE/"},{"name":"基础","slug":"基础","permalink":"http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"}]},{"title":"网站的概述","slug":"网站的概述","date":"2019-10-19T03:33:56.000Z","updated":"2019-11-01T04:31:03.875Z","comments":true,"path":"2019/10/19/网站的概述/","link":"","permalink":"http://yoursite.com/2019/10/19/%E7%BD%91%E7%AB%99%E7%9A%84%E6%A6%82%E8%BF%B0/","excerpt":"","text":"不是很懂搭建网站具体该怎么做（是需要一些web知识么？），所以就按照网上搭建gihub博客的方法自己弄了一下。 有想过FORK别人的网站，但发现FORK过来没有教程根本无从下手，头像都换不来，就放弃了。 这里是利用的HEXO搭建的博客，（话说因为nodejs版本不对没装上耽误了好长的时间）主题模板在网上找的，自己添加了一些喜欢的元素。 要半期考试，分类标签还没准备做。先就这样吧，有时间再想想（划掉）","categories":[],"tags":[{"name":"二轮","slug":"二轮","permalink":"http://yoursite.com/tags/%E4%BA%8C%E8%BD%AE/"},{"name":"基础","slug":"基础","permalink":"http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"}]},{"title":"一轮招新","slug":"一轮招新","date":"2019-10-19T03:27:59.000Z","updated":"2019-11-01T04:30:59.062Z","comments":true,"path":"2019/10/19/一轮招新/","link":"","permalink":"http://yoursite.com/2019/10/19/%E4%B8%80%E8%BD%AE%E6%8B%9B%E6%96%B0/","excerpt":"","text":"（PS:最开始什么都不懂，以为虚拟机很麻烦，就在Windows商店里面直接装了UBUNTU，像采用子系统的方式，没想到远程连接桌面这么麻烦，使用XMING又太卡，最终因为浏览器崩溃解决不了以及装XFACE4都卡而放弃。然后尝试虚拟机，最初下的900+m的镜像，结果好像有点问题，声音调不出来，图形界面以及网络设置也需要照到百度上面一步一步完成（很多方法还行不通）。后来换了一个1.4G的镜像，发现上述东西都自带。自闭了。。。感觉浪费了1周的时间。） 下面进入正题 没仔细对比Centos以及Ubuntu的区别，由于最先找到的网站是Centos的，所以采用了Centos的镜像。桌面方面，个人偏好于gnome的主菜单样式，放弃了KDE。通过gnome-tweak-tool更换了主题光标指针以及壁纸，是桌面达到自己审美需求。 不习惯Gnome上下任务栏的样式，通过删除/usr/share/gnome-shell中的windows-list。隐藏了下任务栏，然后自己装了dash-to-panel的插件，使上任务栏功能向下移，并且达到类似于Windows的任务栏界面，从而减少更换系统所产生的不习惯性。 在装部分软件的时候发现，普通用户不能直接更改计算机磁盘里的文件，需ROOT后采用sudo命令达到移动删除等指令，亦或者通过使用ROOT账户直接进入图形界面。在这里更改了 /etc/gdm/custom.conf文件，使开机可以不通过输入密码直接使用ROOT账户登录，由于是初学者这里我也没考虑系统的安全性。 （手动安装了vmware-tool，使虚拟机与主机之间可以文件共享，算优化点吗？。。)安装了oh-my-zsh，以及通过调整终端背景色和字体色，达到自己最舒服的编译界面。 在C语言环境方面，安装了gcc，可以直接在终端上完成C语言的编译，对于集成环境方面，还安装了codeblock ide及其的汉化包，用以应对将来更加复杂的编译工作。","categories":[],"tags":[{"name":"一轮","slug":"一轮","permalink":"http://yoursite.com/tags/%E4%B8%80%E8%BD%AE/"}]}]}